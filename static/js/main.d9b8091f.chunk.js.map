{"version":3,"sources":["components/Header/index.js","components/Search/index.js","components/EmployeeTable/index.js","Utility/API.js","Container/EmployeesContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","props","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","EmployeeTable","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","axios","get","EmployeesContainer","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","data","results","catch","err","console","log","Search","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAgBeA,G,YAZA,WACb,OACE,mCACE,oBAAIC,UAAU,cAAd,gCACA,mBAAGA,UAAU,cAAb,6G,8CCcSC,G,MAnBG,SAACC,GAGjB,OACE,qBAAKF,UAAU,sDAAf,SACE,sBAAMA,UAAU,kBAAkBG,SAAUD,EAAME,iBAAlD,SACE,uBACEJ,UAAU,eACVK,MAAOH,EAAMG,MACbC,KAAK,SACLC,SAAUL,EAAMM,kBAChBC,KAAK,SACLC,YAAY,iBCsCPC,G,MAlDO,SAACT,GACnB,OACI,wBAAOF,UAAU,iDAAjB,UACI,gCACI,+BACI,oBAAIY,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMC,aAAW,OAAOC,gBAAc,OAAhD,SACI,sBAAMC,QAAS,kBAAMb,EAAMc,OAAO,OAAQ,OAAQ,UAAlD,oBAIJ,oBAAIJ,MAAM,MAAV,SACI,sBAAMG,QAAS,kBAAMb,EAAMc,OAAO,UAAlC,qBAEJ,oBAAIJ,MAAM,MAAV,SACI,sBAAMG,QAAS,kBAAMb,EAAMc,OAAO,UAAlC,qBAEJ,oBAAIJ,MAAM,MAAV,SACI,sBAAMG,QAAS,kBAAMb,EAAMc,OAAO,MAAO,SAAzC,wBAIZ,gCACKd,EAAMe,MAAMC,kBAAkBC,KAAI,SAACC,GAAc,IAAD,EACrBA,EAASd,KAAzBe,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,KACTC,EAAQ,UAAMF,EAAN,YAAeC,GAGvBE,EAAMtB,EAAMuB,WAAWL,EAASI,IAAIE,MAE1C,OACI,+BACI,6BACI,qBAAKC,IAAKP,EAASQ,QAAQC,UAAWC,IAAKP,MAE/C,oBAAIvB,UAAU,eAAd,SAA8BuB,IAC9B,oBAAIvB,UAAU,eAAd,SACI,mBAAG+B,KAAI,gBAAWX,EAASY,OAA3B,SAAqCZ,EAASY,UAClD,oBAAIhC,UAAU,qBAAd,SACI,mBAAG+B,KAAI,iBAAYX,EAASa,OAA5B,SAAsCb,EAASa,UAEnD,oBAAIjC,UAAU,eAAd,SAA8BwB,MAVzBJ,EAASc,MAAMC,gB,iBC9BjC,EACG,WACV,OAAOC,IAAMC,IAJT,iDCuIGC,E,4MAnIXrB,MAAQ,CACJsB,OAAQ,GACRC,UAAW,GACXtB,kBAAmB,GACnBuB,eAAgB,EAAKC,uB,EAyBzBlC,kBAAoB,SAACmC,GACjB,IAAMtC,EAAQsC,EAAMC,OAAOvC,MAC3B,EAAKwC,SAAS,CAAEN,OAAQlC,IACxB,EAAKyC,gBAAgBzC,EAAM0C,cAAcC,S,EAG7C5C,iBAAmB,SAACuC,GAChBA,EAAMM,kB,EAKVjC,OAAS,SAACkC,GAAqC,IAAhCC,EAA+B,uDAArB,EAAGC,EAAkB,uDAAN,EAChCC,EAAkB,EAAKpC,MAAMC,kBAC7B,EAAKD,MAAMwB,eAAeS,GAC1B,EAAKL,SAAS,CACV3B,kBAAmBmC,EAAgBC,UACnCb,eAAe,2BACR,EAAKC,uBADE,kBAETQ,EAAyC,QAAnC,EAAKjC,MAAMwB,eAAeS,GAAiB,OAAS,WAInEG,EAAkB,EAAKpC,MAAMC,kBAAkBqC,MAAK,SAACC,EAAGC,GAMpD,OALAD,EAAIA,EAAEN,GACNO,EAAIA,EAAEP,GAIFC,EACIC,GAAaI,EAAEL,KAAaM,EAAEN,GACvBK,EAAEJ,GAAWM,cAAcD,EAAEL,IAEjCI,EAAEL,GAASO,cAAcD,EAAEN,IAE3BK,EAAEE,cAAcD,MAI/B,EAAKZ,SAAS,CACV3B,kBAAmBmC,EACnBZ,eAAe,2BACR,EAAKC,uBADE,kBAETQ,EAAM,Y,EAMvBJ,gBAAkB,SAACa,GACXA,EACA,EAAKd,SAAS,CACV3B,kBAAmB,EAAKD,MAAMuB,UAAUoB,QAAO,SAACxC,GAC5C,OACIA,EAASd,KAAKe,MACT0B,cACAc,OAAO,IAAKzC,EAASd,KAAKgB,KAAKyB,eAC/Be,SAASH,IACdvC,EAASY,MAAM8B,SAASH,IACxBvC,EAASY,MAAM+B,QAAQ,YAAa,IAAID,SAASH,IACjDvC,EAASa,MAAM6B,SAASH,IACxB,EAAKlC,WAAWL,EAASI,IAAIE,MAAMoC,SAASH,QAKxD,EAAKd,SAAS,CAAE3B,kBAAmB,EAAKD,MAAMuB,a,EAItDf,WAAa,SAACC,GACVA,EAAO,IAAIsC,KAAKtC,GAChB,IAAIF,EAAM,GAMV,OALAA,EAAIyC,MAAM,KAAOvC,EAAKwC,WAAa,IAAIC,OAAO,IAC9C3C,EAAIyC,MAAM,IAAMvC,EAAK0C,WAAWD,OAAO,IACvC3C,EAAIyC,KAAKvC,EAAK2C,eAGP7C,EAAI8C,KAAK,M,kEA1FC,IAAD,OAChBC,IACKC,MAAK,SAACC,GAAD,OACF,EAAK5B,SAAS,CACVL,UAAWiC,EAAIC,KAAKC,QACpBzD,kBAAmBuD,EAAIC,KAAKC,aAGnCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAsFhC,OACI,qCACI,cAACG,EAAD,CACI3E,MAAO4E,KAAKhE,MAAMsB,OAClB/B,kBAAmByE,KAAKzE,kBACxBJ,iBAAkB6E,KAAK7E,mBAE3B,qBAAKJ,UAAU,iBAAf,SACI,cAAC,EAAD,CACIiB,MAAOgE,KAAKhE,MACZD,OAAQiE,KAAKjE,OACb8B,gBAAiBmC,KAAKnC,gBACtBrB,WAAYwD,KAAKxD,oB,4CAnHjC,MAAO,CACHnB,KAAM,GACN0B,MAAO,GACPC,MAAO,GACPT,IAAK,Q,GAbgB0D,aCSlBC,EATH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9b8091f.chunk.js","sourcesContent":["  \r\nimport React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1 className=\"text-center\">Employee Directory</h1>\r\n      <p className=\"text-center\">\r\n        Click on column headers to filter by heading or use the search box to narrow\r\n        your results.\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  // Setting the component's initial state\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light justify-content-center\">\r\n      <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\r\n        <input\r\n          className=\"form-control\"\r\n          value={props.value}\r\n          name=\"search\"\r\n          onChange={props.handleInputChange}\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </form>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst EmployeeTable = (props) => {\r\n    return (\r\n        <table className=\"table table-striped table-sortable text-center\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Image</th>\r\n                    <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\r\n                        <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\r\n                            Name\r\n            </span>\r\n                    </th>\r\n                    <th scope=\"col\">\r\n                        <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\r\n                    </th>\r\n                    <th scope=\"col\">\r\n                        <span onClick={() => props.sortBy(\"email\")}>Email</span>\r\n                    </th>\r\n                    <th scope=\"col\">\r\n                        <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.state.filteredEmployees.map((employee) => {\r\n                    const { first, last } = employee.name;\r\n                    const fullName = `${first} ${last}`;\r\n\r\n                    // Format date\r\n                    const dob = props.formatDate(employee.dob.date);\r\n\r\n                    return (\r\n                        <tr key={employee.login.uuid}>\r\n                            <td>\r\n                                <img src={employee.picture.thumbnail} alt={fullName} />\r\n                            </td>\r\n                            <td className=\"align-middle\">{fullName}</td>\r\n                            <td className=\"align-middle\">\r\n                                <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\r\n                            <td className=\"align-middle email\">\r\n                                <a href={`mailto:${employee.email}`}>{employee.email}</a>\r\n                            </td>\r\n                            <td className=\"align-middle\">{dob}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default EmployeeTable;","import axios from \"axios\";\r\n\r\nconst URL = \"https://randomuser.me/api/?results=50&nat=us\"\r\n\r\nexport default {\r\n    getEmployees: function () {\r\n        return axios.get(URL);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport SearchBar from \"../components/Search\";\r\nimport EmployeeTable from \"../components/EmployeeTable\";\r\nimport API from \"../Utility/API.js\";\r\n\r\nclass EmployeesContainer extends Component {\r\n    state = {\r\n        search: \"\",\r\n        employees: [],\r\n        filteredEmployees: [],\r\n        sortDirections: this.initialSortDirections,\r\n    };\r\n\r\n    get initialSortDirections() {\r\n        return {\r\n            name: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            dob: \"\",\r\n        };\r\n    }\r\n\r\n    // When this component mounts, load random users as employees from https://randomuser.me/\r\n    componentDidMount() {\r\n        API.getEmployees()\r\n            .then((res) =>\r\n                this.setState({\r\n                    employees: res.data.results,\r\n                    filteredEmployees: res.data.results,\r\n                })\r\n            )\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    // Update search state to filter by employee name\r\n    handleInputChange = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ search: value });\r\n        this.filterEmployees(value.toLowerCase().trim());\r\n    };\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    // Sort with the key of specified object.\r\n    // If key has children, sort by primary child and optionally a secondary child. i.e. sort by last name, then first.\r\n    sortBy = (key, primary = 0, secondary = 0) => {\r\n        let sortedEmployees = this.state.filteredEmployees;\r\n        if (this.state.sortDirections[key]) {\r\n            this.setState({\r\n                filteredEmployees: sortedEmployees.reverse(),\r\n                sortDirections: {\r\n                    ...this.initialSortDirections,\r\n                    [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\r\n                },\r\n            });\r\n        } else {\r\n            sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\r\n                a = a[key];\r\n                b = b[key];\r\n\r\n                // If secondary comparison given and primary comparison is equal\r\n                // Example: Sorting by last name, if last names are equal, then sort that instance by first name instead.\r\n                if (primary) {\r\n                    if (secondary && a[primary] === b[primary]) {\r\n                        return a[secondary].localeCompare(b[secondary]);\r\n                    }\r\n                    return a[primary].localeCompare(b[primary]);\r\n                } else {\r\n                    return a.localeCompare(b);\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                filteredEmployees: sortedEmployees,\r\n                sortDirections: {\r\n                    ...this.initialSortDirections,\r\n                    [key]: \"asc\",\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    filterEmployees = (input) => {\r\n        if (input) {\r\n            this.setState({\r\n                filteredEmployees: this.state.employees.filter((employee) => {\r\n                    return (\r\n                        employee.name.first\r\n                            .toLowerCase()\r\n                            .concat(\" \", employee.name.last.toLowerCase())\r\n                            .includes(input) ||\r\n                        employee.phone.includes(input) ||\r\n                        employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\r\n                        employee.email.includes(input) ||\r\n                        this.formatDate(employee.dob.date).includes(input)\r\n                    );\r\n                }),\r\n            });\r\n        } else {\r\n            this.setState({ filteredEmployees: this.state.employees });\r\n        }\r\n    };\r\n\r\n    formatDate = (date) => {\r\n        date = new Date(date);\r\n        let dob = [];\r\n        dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\r\n        dob.push((\"0\" + date.getDate()).slice(-2));\r\n        dob.push(date.getFullYear());\r\n\r\n        // Join formatted date\r\n        return dob.join(\"-\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <SearchBar\r\n                    value={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                />\r\n                <div className=\"container mt-4\">\r\n                    <EmployeeTable\r\n                        state={this.state}\r\n                        sortBy={this.sortBy}\r\n                        filterEmployees={this.filterEmployees}\r\n                        formatDate={this.formatDate}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeesContainer;","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport EmployeesContainer from \"./Container/EmployeesContainer\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <EmployeesContainer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}